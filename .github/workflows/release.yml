name: Build and Release

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, macos-latest, windows-latest]
        python-version: [3.9, 3.10, 3.11]

    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install pyside6 pyinstaller "numpy<2.0.0" scipy matplotlib

    - name: Install platform-specific dependencies (Linux)
      if: runner.os == 'Linux'
      run: sudo apt-get install -y libxcb-xinerama0

    - name: Install platform-specific dependencies (macOS)
      if: runner.os == 'macos'
      run: |
        brew install libomp

    - name: Build the application with PyInstaller
      run: |
        if [ $RUNNER_OS == 'Windows' ]; then
          pyinstaller --onefile main.py
        else
          pyinstaller --onefile main.py
        fi

    - name: Archive the build
      run: |
        mkdir release
        mv dist/* release/

    - name: Upload build artifact
      uses: actions/upload-artifact@v2
      with:
        name: build-${{ runner.os }}
        path: release/*

  release:
    runs-on: ubuntu-latest
    needs: build
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Download build artifacts from all platforms
      uses: actions/download-artifact@v2
      with:
        name: build-windows
        path: ./release/windows

    - name: Download build artifacts from macOS
      uses: actions/download-artifact@v2
      with:
        name: build-macos
        path: ./release/macos

    - name: Download build artifacts from Linux
      uses: actions/download-artifact@v2
      with:
        name: build-linux
        path: ./release/linux

    - name: Install GitHub CLI
      run: |
        curl -fsSL https://cli.github.com/packages/githubcli-archive-keyring.gpg | sudo tee /usr/share/keyrings/githubcli-archive-keyring.gpg > /dev/null
        sudo apt update
        sudo apt install gh

    - name: Create and upload GitHub Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Ensure GitHub CLI is installed
        gh release create "v${{ github.run_number }}" ./release/* --title "Release v${{ github.run_number }}" --notes "Automated release generated by GitHub Actions."
